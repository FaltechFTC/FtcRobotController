From 0e2cbd70b125449e7b7455153c992def8266c03f Mon Sep 17 00:00:00 2001
From: Doof6473 <rishi.yarlagadda10@gmail.com>
Date: Tue, 30 Nov 2021 16:55:37 -0600
Subject: [PATCH] fix auto stopping error

---
 .../ftc/teamcode/xdrive/AutoBrain.java        |  1 +
 .../ftc/teamcode/xdrive/DriveBrain.java       | 83 ++++++++++---------
 2 files changed, 43 insertions(+), 41 deletions(-)

diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/AutoBrain.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/AutoBrain.java
index fcdf891..d769579 100644
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/AutoBrain.java
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/AutoBrain.java
@@ -107,6 +107,7 @@ public class AutoBrain {
         driveBrain.maintTime(1);
     }
     public void autoPosScore2() {
+
         driveBrain.setArmMotorPosition(Robot.ARM_PARK_POS);
         driveBrain.rotateToHeadingAbsolute(45,2, mediumPower, shortTimeout);
         driveBrain.driveDistance(24, mediumPower, shortTimeout);
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/DriveBrain.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/DriveBrain.java
index 1e09a87..25fab55 100644
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/DriveBrain.java
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/xdrive/DriveBrain.java
@@ -252,7 +252,8 @@ public class DriveBrain {
         runtime.reset();
         double currentHeading = robot.getHeading(AngleUnit.DEGREES);
         double headingError = Utility.wrapDegrees360(targetHeading - currentHeading);
-        while ( (runtime.seconds() < timeout)&& ((Math.abs(headingError) > tolerance)||runtimeInTolerance.seconds()<0.25)) {
+        while ( (runtime.seconds() < timeout)&& ((Math.abs(headingError) > tolerance)||runtimeInTolerance.seconds()<0.25)
+                && opModeIsActive()) {
             if(Math.abs(headingError) > tolerance){
                 runtimeInTolerance.reset();
             }
@@ -286,32 +287,32 @@ public class DriveBrain {
         return rotateToHeadingAbsolute(targetHeading, tolerance, power, timeout);
     }
     public void carouselMoves(int direction) {
-        if (robot.useCarousel) {
-            robot.carousel.setPower(.3 * direction);
-            sleep(2000);
-            robot.carousel.setPower(.4 * direction);
-            sleep(500);
-            robot.carousel.setPower(1 * direction);
-            sleep(800);
-            robot.carousel.setPower(-1 * direction);
-            sleep(350);
-            robot.carousel.setPower(0);
+            if (robot.useCarousel) {
+                robot.carousel.setPower(.3 * direction);
+                sleep(2000);
+                robot.carousel.setPower(.4 * direction);
+                sleep(500);
+                robot.carousel.setPower(1 * direction);
+                sleep(800);
+                robot.carousel.setPower(-1 * direction);
+                sleep(350);
+                robot.carousel.setPower(0);
+            }
         }
-    }
 //    public void carouselStart() {
 //        carouselTimer = new ElapsedTime();
 //    }
     public void carouselMove() {
-        carouselStart(true);
-        if (carouselTimer!=null) {
-            if (carouselTimer.milliseconds() > 350) robot.carousel.setPower(.3);
-            else if (carouselTimer.milliseconds()>700)robot.carousel.setPower(.4);
-            else if (carouselTimer.milliseconds()>1500)robot.carousel.setPower(1);
-            else {
-                robot.carousel.setPower(0);
-                carouselTimer = null;
+            carouselStart(true);
+            if (carouselTimer!=null) {
+                if (carouselTimer.milliseconds() > 350) robot.carousel.setPower(.3);
+                else if (carouselTimer.milliseconds()>700)robot.carousel.setPower(.4);
+                else if (carouselTimer.milliseconds()>1500)robot.carousel.setPower(1);
+                else {
+                    robot.carousel.setPower(0);
+                    carouselTimer = null;
+                }
             }
-        }
     }
 //    public void pusherStart() {
 //        pusherTimer = new ElapsedTime();
@@ -326,30 +327,30 @@ public class DriveBrain {
 //    }
 
     public void carouselMaint() {
-        if (Robot.useCarousel && carouselTimer!=null) {
-            double m = carouselTimer.milliseconds();
-            if (m < 600) robot.carousel.setPower((m/600)*.75+.25);
-            else if (m<1350){
-                robot.carousel.setPower(.85);
-            }
-            else {
-                robot.carousel.setPower(0);
-                carouselTimer = null;
+            if (Robot.useCarousel && carouselTimer!=null) {
+                double m = carouselTimer.milliseconds();
+                if (m < 600) robot.carousel.setPower((m/600)*.75+.25);
+                else if (m<1350){
+                    robot.carousel.setPower(.85);
+                }
+                else {
+                    robot.carousel.setPower(0);
+                    carouselTimer = null;
+                }
             }
-        }
     }
     public void carouselStart(boolean direction) {
-        //true =
-        carouselTimer = new ElapsedTime();
-        carouselDirection = direction?-1:1;
+            //true =
+            carouselTimer = new ElapsedTime();
+            carouselDirection = direction?-1:1;
     }
     public void pusherMaint() {
-        if (pusherTimer != null) {
-            if (pusherTimer.milliseconds() > 500) {
-                robot.pusherOpen();
-                pusherTimer = null;
+            if (pusherTimer != null) {
+                if (pusherTimer.milliseconds() > 500) {
+                    robot.pusherOpen();
+                    pusherTimer = null;
+                }
             }
-        }
     }
     public void pusherStart() {
         pusherTimer = new ElapsedTime();
@@ -374,7 +375,7 @@ public class DriveBrain {
     }
     public void maintTime(double timeout) {
         ElapsedTime timer = new ElapsedTime();
-        while (timer.seconds()<timeout) {
+        while (timer.seconds()<timeout && opModeIsActive()) {
             maint();
             sleep(1);
         }
@@ -423,7 +424,7 @@ public class DriveBrain {
 
             robot.setDrive(powerY, powerX, powerRot,1);
 
-        } while (inTolerance && elapsedInTolerance.seconds()<minToleranceSeconds && elapsed.seconds()<timeoutSeconds);
+        } while (inTolerance && elapsedInTolerance.seconds()<minToleranceSeconds && elapsed.seconds()<timeoutSeconds && opModeIsActive());
 
         robot.setDriveStop();
         return inTolerance;
-- 
2.23.0

